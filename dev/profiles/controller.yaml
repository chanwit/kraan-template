apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: addonslayers.kraan.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.version
    name: Version
    type: string
  - JSONPath: .spec.source.name
    name: Source
    type: string
  - JSONPath: .spec.source.path
    name: Path
    type: string
  - JSONPath: .status.state
    name: Status
    type: string
  - JSONPath: .status.conditions[?(@.status=="True")].reason
    name: Reason
    type: string
  group: kraan.io
  names:
    kind: AddonsLayer
    listKind: AddonsLayerList
    plural: addonslayers
    shortNames:
    - al
    - layer
    - addonlayer
    singular: addonslayer
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: AddonsLayer is the Schema for the addons API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AddonsLayerSpec defines the desired state of AddonsLayer.
          properties:
            hold:
              description: This flag tells the controller to hold off deployment of these addons,
              type: boolean
            interval:
              description: The interval at which to check for changes. Defaults to controller's default
              type: string
            prereqs:
              description: The prerequisites information, if not present not prerequisites
              properties:
                dependsOn:
                  description: The names of other addons the addons depend on
                  items:
                    type: string
                  type: array
                k8sVersion:
                  description: The minimum version of K8s to be deployed
                  type: string
              type: object
            source:
              description: The source to obtain the addons definitions from
              properties:
                name:
                  description: The name of the gitrepositories.source.fluxcd.io custom resource to use
                  type: string
                namespace:
                  description: The namespace of the gitrepositories.source.fluxcd.io custom resource to use
                  type: string
                path:
                  description: Path to the directory in the git repository to use, defaults to repository base directory. The Kraan controller will process the yaml files in that directory.
                  pattern: ^\./
                  type: string
              required:
              - name
              - path
              type: object
            timeout:
              description: Timeout for operations. Defaults to 'Interval' duration.
              type: string
            version:
              description: Version is the version of the addon layer
              type: string
          required:
          - source
          - version
          type: object
        status:
          description: AddonsLayerStatus defines the observed status.
          properties:
            conditions:
              description: Conditions history.
              items:
                description: "Condition contains condition information for an AddonLayer. \n Copyright 2020 The Flux CD contributors. \n Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at \n     http://www.apache.org/licenses/LICENSE-2.0 \n Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the timestamp corresponding to the last status change of this condition.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human readable description of the details of the last transition, complementing reason.
                    type: string
                  reason:
                    description: Reason is a brief machine readable explanation for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of ('True', 'False', 'Unknown').
                    type: string
                  type:
                    description: Type of the condition, currently ('Ready').
                    type: string
                  version:
                    description: Version, the version the status relates to.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            state:
              description: State is the current state of the layer.
              type: string
            version:
              description: Version, the version the state relates to.
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller
  name: kraan-controller
  namespace: gotk-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kraan-controller
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: kraan-controller
    spec:
      containers:
      - args:
        - --enable-leader-election
        - --zap-log-level=99
        - --zap-encoder=json
        env:
        - name: DATA_PATH
          value: /home/controller/data
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: chanwit/kraan-controller:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 15
        name: manager
        ports:
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /readyz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 15
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /home/controller/data
          name: data-volume
      terminationGracePeriodSeconds: 10
      volumes:
      - name: data-volume
        emptyDir: {}